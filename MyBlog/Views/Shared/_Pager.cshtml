@model MyBlog.Models.ListViewModel

@* Read the current page and total pages *@

@{
    var currentPage = ViewContext.RequestContext.HttpContext.Request["pageNumber"] != null
      ? int.Parse(ViewContext.RequestContext.HttpContext.Request["pageNumber"])
      : 1;

    var totalPages = Math.Ceiling((double)Model.TotalPosts / ConfigUtil.ReadFromConfig(Constants.PAGE_SIZE));
}

@* Check do we need to display pagination links *@

@if (currentPage > 1 || currentPage < totalPages)
{
    var prev = string.Format("pageNumber={0}", currentPage - 1);
    var next = string.Format("pageNumber={0}", currentPage + 1);

    @* If the view is rendered for "search" action append the pagination value with "&" *@

if (ViewContext.RouteData.Values["action"].ToString()
  .Equals("search", StringComparison.OrdinalIgnoreCase))
{
    var s = String.Format("?s={0}", ViewContext.RequestContext.HttpContext.Request.QueryString["s"]);
    prev = String.Format("{0}&{1}", s, prev);
    next = String.Format("{0}&{1}", s, next);
}
else
{
    prev = String.Concat("?", prev);
    next = String.Concat("?", next);
}

  <!--pagination links-->
    <div class="pager">

        <a href="@prev" title="Previous" class="previous"
           style="visibility:@(currentPage > 1 ? "visible" : "collapse")"><< previous</a>

        <a href="@next" title="Next" class="next"
           style="visibility:@(currentPage < totalPages ? "visible" : "collapse")">next >></a>

    </div>
}
